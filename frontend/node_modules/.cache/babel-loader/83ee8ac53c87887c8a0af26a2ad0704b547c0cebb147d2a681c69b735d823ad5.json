{"ast":null,"code":"var _jsxFileName = \"/Users/abhayarao/Documents/PES Engineering/3rd YEAR/6th SEM/GDG On Campus Solution/InvestEasy/frontend/src/components/Chat/ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, Container, Alert, CircularProgress } from '@mui/material';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSendMessage = async message => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Add user message to chat\n      const userMessage = {\n        role: 'user',\n        content: message\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Send to backend\n      const response = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: [userMessage]\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response from server');\n      }\n      const data = await response.json();\n      if (!data.response) {\n        throw new Error('Empty response received');\n      }\n\n      // Add AI response to chat\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: data.response\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        height: '80vh',\n        display: 'flex',\n        flexDirection: 'column',\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflow: 'auto',\n          mb: 2\n        },\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          my: 2,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSend: handleSendMessage,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"WZ4G0+RK/Z1jfgdGkYche+Ua6dc=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","Box","Paper","Container","Alert","CircularProgress","ChatMessage","ChatInput","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","loading","setLoading","error","setError","handleSendMessage","message","userMessage","role","content","prev","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","maxWidth","children","elevation","sx","height","display","flexDirection","p","flexGrow","overflow","mb","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","my","severity","mt","onSend","disabled","_c","$RefreshReg$"],"sources":["/Users/abhayarao/Documents/PES Engineering/3rd YEAR/6th SEM/GDG On Campus Solution/InvestEasy/frontend/src/components/Chat/ChatInterface.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Paper, Container, Alert, CircularProgress } from '@mui/material';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSendMessage = async (message) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Add user message to chat\n      const userMessage = { role: 'user', content: message };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Send to backend\n      const response = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          messages: [userMessage]\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get response from server');\n      }\n\n      const data = await response.json();\n      \n      if (!data.response) {\n        throw new Error('Empty response received');\n      }\n\n      // Add AI response to chat\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: data.response\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Paper elevation={3} sx={{ height: '80vh', display: 'flex', flexDirection: 'column', p: 2 }}>\n        <Box sx={{ flexGrow: 1, overflow: 'auto', mb: 2 }}>\n          {messages.map((msg, index) => (\n            <ChatMessage key={index} message={msg} />\n          ))}\n          {loading && (\n            <Box display=\"flex\" justifyContent=\"center\" my={2}>\n              <CircularProgress />\n            </Box>\n          )}\n          {error && (\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\n              {error}\n            </Alert>\n          )}\n        </Box>\n        <ChatInput onSend={handleSendMessage} disabled={loading} />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}